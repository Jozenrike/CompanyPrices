openapi: 3.0.3
info:
  title: Swagger Prices Integration - OpenAPI 3.0
  description: |-
    RatedPower crud api rest challenge.
  termsOfService: http://swagger.io/terms/
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.21
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
tags:
  - name: Posts and comments
    description: Operations about posts and comments
paths:
  /prices:
    summary: Operation over specific object in Prices collection
    description: 'Operations to search price fees'
    get:
      tags:
        - PRICES
      parameters:
        - name: productId
          in: query
          schema:
            type: integer
          required: true
        - name: brandId
          in: query
          schema:
            type: integer
          required: true
        - name: applyDate
          in: query
          schema:
            type: string
            format: date-time
          required: true
          example: "2024-01-24-17.32.28"

      responses:
        '200':
          $ref: '#/components/responses/200OkResponse'
        '404':
          $ref: '#/components/responses/404CommonErrorResponse'
        '405':
          $ref: '#/components/responses/405CommonErrorResponse'
        '500':
          $ref: '#/components/responses/500CommonErrorResponse'
        '501':
          $ref: '#/components/responses/501CommonErrorResponse'
        '503':
          $ref: '#/components/responses/503CommonErrorResponse'
      operationId: searchPrice
      summary: Search prices by filters
      description: Obtain the information of found prices.
components:
  schemas:
    ProblemType:
      required:
        - errors
      type: object
      properties:
        errors:
          description: List of more detailed error messages
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailType'
    ProblemDetailType:
      required:
        - status
        - title
      type: object
      properties:
        type:
          description: >-
            A URI reference [RFC3986] that uniquely identifies the problem  type only in the
            context of the provided API.
          default: resource
          type: string
        title:
          description: >-
            A short summary of the problem type. Written in English and  readable for engineers,
            usually not suited for non technical  stakeholders and not localized.
          type: string
        status:
          format: int32
          description: >-
            The HTTP status code ([RFC7231], Section 6) generated by the  origin server for this
            occurrence of the problem.
          maximum: 599
          minimum: 100
          type: integer
        detail:
          description: A human readable explanation specific to this occurrence  of the problem.
          type: string
        instance:
          description: >-
            An absolute URI that identifies the specific occurrence of the problem. It may or may
            not yield further information if dereferenced.
          type: string
        invalidParams:
          description: List of the invalid params that caused the problem.
          type: array
          items:
            $ref: '#/components/schemas/ProblemParamType'
        code:
          description: >-
            Error code provided by the backend, could be used to map with external clients via
            translation table.
    ProblemParamType:
      type: object
      properties:
        name:
          description: Name of the parameter in the error caused
          type: string
        reason:
          description: Concise description of the error caused
          type: string
    PriceResponse:
      required:
        - productId
        - brandId
        - priceList
        - startDate
        - endDate
        - price
      type: object
      properties:
        productId:
          type: integer
          example: 1
        brandId:
          type: integer
          example: 1
        priceList:
          type: integer
          example: 1
        startDate:
          type: string
          example: "2023-12-03T20:40:39.547Z"
        endDate:
          type: string
          example: "2023-12-03T20:40:39.547Z"
        price:
          type: string
          example: "35.50"
  responses:
    405CommonErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemType'
          examples:
            405 Method Not Allowed:
              value:
                errors:
                  - title: Method not allowed
                    status: 405
                    detail: The target resource doesn't support this method
      description: Method Not Allowed
    500CommonErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemType'
          examples:
            500 Internal Server Error:
              value:
                errors:
                  - title: Internal server error
                    status: 500
                    detail: This is a functional description of the error caused
      description: Internal Server Error
    501CommonErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemType'
          examples:
            501 Not Implemented:
              value:
                errors:
                  - title: Not Implemented
                    status: 501
                    detail: Operation requested is not implemented in the system
      description: Not Implemented
    503CommonErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemType'
          examples:
            503 Service Unavailable:
              value:
                errors:
                  - title: Service Unavailable
                    status: 503
                    detail: Service Unavailable
      description: Service Unavailable
    404CommonErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemType'
          examples:
            404 Not Found:
              value:
                errors:
                  - title: Not Found
                    status: 404
                    detail: The target price could not be found in the system
      description: Not Found
    200OkResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PriceResponse'
      description: Ok
openapi: 3.0.3
info:
  title: Swagger Prices Integration - OpenAPI 3.0
  description: |-
    RatedPower crud api rest challenge.
  termsOfService: http://swagger.io/terms/
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.21
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
tags:
  - name: Posts and comments
    description: Operations about posts and comments
paths:
  /prices:
    summary: Operation over specific object in Prices collection
    description: 'Operations to search price fees'
    get:
      tags:
        - PRICES
      parameters:
        - name: productId
          in: query
          schema:
            type: integer
          required: true
        - name: brandId
          in: query
          schema:
            type: integer
          required: true
        - name: applyDate
          in: query
          schema:
            type: string
            format: date-time
          required: true
          example: "2024-01-24-17.32.28"

      responses:
        '200':
          $ref: '#/components/responses/200OkResponse'
        '400':
          description: The target price could not be found in the system
        '404':
          description: Required parameter 'brandId' is not present.
      operationId: searchPrice
      summary: Search prices by filters
      description: Obtain the information of found prices.
components:
  schemas:
    PriceResponse:
      required:
        - productId
        - brandId
        - priceList
        - startDate
        - endDate
        - price
      type: object
      properties:
        productId:
          type: integer
          example: 1
        brandId:
          type: integer
          example: 1
        priceList:
          type: integer
          example: 1
        startDate:
          type: string
          example: "2023-12-03T20:40:39.547Z"
        endDate:
          type: string
          example: "2023-12-03T20:40:39.547Z"
        price:
          type: string
          example: "35.50"
    Error:
      type: object
      properties:
        errorField:
          type: string
          example: "brandId"
        errorMessage:
          type: string
          example: "brandId is required"
  responses:
    200OkResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PriceResponse'
      description: Ok